{"version":3,"file":"index.es.js","sources":["../src/index.js"],"sourcesContent":["import React from 'react'\n\nexport let queries = []\nconst cancelledError = {}\nexport let globalStateListeners = []\nlet uid = 0\nconst configContext = React.createContext()\nconst isServer = typeof window === 'undefined'\n\nlet defaultConfig = {\n  retry: 3,\n  retryDelay: attemptIndex => Math.min(1000 * 2 ** attemptIndex, 30000),\n  staleTime: 0,\n  cacheTime: 5 * 60 * 1000,\n  refetchAllOnWindowFocus: true,\n  refetchInterval: false,\n  suspense: false,\n  queryKeySerializerFn: defaultQueryKeySerializerFn,\n}\n\nconst onWindowFocus = () => {\n  const { refetchAllOnWindowFocus } = defaultConfig\n\n  if (isDocumentVisible() && isOnline()) {\n    refetchAllQueries({\n      shouldRefetchQuery: query => {\n        if (typeof query.config.refetchOnWindowFocus === 'undefined') {\n          return refetchAllOnWindowFocus\n        } else {\n          return query.config.refetchOnWindowFocus\n        }\n      },\n    }).catch(error => {\n      console.error(error.message)\n    })\n  }\n}\n\nlet removePreviousHandler\n\nexport function setFocusHandler(callback) {\n  // Unsub the old watcher\n  if (removePreviousHandler) {\n    removePreviousHandler()\n  }\n  // Sub the new watcher\n  removePreviousHandler = callback(onWindowFocus)\n}\n\nsetFocusHandler(handleFocus => {\n  // Listen to visibillitychange and focus\n  if (typeof window !== 'undefined' && window.addEventListener) {\n    window.addEventListener('visibilitychange', handleFocus, false)\n    window.addEventListener('focus', handleFocus, false)\n\n    return () => {\n      // Be sure to unsubscribe if a new handler is set\n      window.removeEventListener('visibilitychange', handleFocus)\n      window.removeEventListener('focus', handleFocus)\n    }\n  }\n})\n\nexport function ReactQueryConfigProvider({ config, children }) {\n  let configContextValue = React.useContext(configContext)\n\n  const newConfig = React.useMemo(\n    () => ({\n      ...(configContextValue || defaultConfig),\n      ...config,\n    }),\n    [config, configContextValue]\n  )\n\n  if (!configContextValue) {\n    defaultConfig = newConfig\n  }\n\n  return (\n    <configContext.Provider value={newConfig}>\n      {children}\n    </configContext.Provider>\n  )\n}\n\nfunction useConfigContext() {\n  return React.useContext(configContext) || defaultConfig\n}\n\nfunction makeQuery(options) {\n  let initialData = options.config.paginated ? [] : null\n\n  if (typeof options.config.initialData !== 'undefined') {\n    initialData = options.config.initialData\n  }\n\n  let query = {\n    ...options,\n    pageVariables: [],\n    instances: [],\n    state: {\n      error: null,\n      isFetching: false,\n      isFetchingMore: false,\n      canFetchMore: false,\n      failureCount: 0,\n      isCached: false,\n      isStale: true,\n      data: initialData,\n    },\n    // promise: null,\n    // staleTimeout: null,\n    // cacheTimeout: null,\n    // cancelled: null,\n  }\n\n  query.setState = updater => {\n    query.state = functionalUpdate(updater, query.state)\n    query.instances.forEach(instance => {\n      instance.onStateUpdate(query.state)\n    })\n    globalStateListeners.forEach(d => d())\n  }\n\n  query.subscribe = instance => {\n    let found = query.instances.find(d => d.id === instance.id)\n\n    if (found) {\n      Object.assign(found, instance)\n    } else {\n      found = instance\n      query.instances.push(instance)\n    }\n\n    // Mark as active\n    query.setState(old => {\n      return {\n        ...old,\n        isInactive: false,\n      }\n    })\n\n    // Cancel garbage collection\n    clearTimeout(query.cacheTimeout)\n\n    // Mark the query as not cancelled\n    query.cancelled = null\n\n    // Return the unsubscribe function\n    return () => {\n      query.instances = query.instances.filter(d => d.id !== instance.id)\n\n      if (!query.instances.length) {\n        // Cancel any side-effects\n        query.cancelled = cancelledError\n\n        query.cancelQueries()\n\n        // Mark as inactive\n        query.setState(old => {\n          return {\n            ...old,\n            isInactive: true,\n          }\n        })\n\n        // Schedule garbage collection\n        query.cacheTimeout = setTimeout(\n          () => {\n            queries.splice(queries.findIndex(d => d === query), 1)\n            globalStateListeners.forEach(d => d())\n          },\n          query.state.isCached ? query.config.cacheTime : 0\n        )\n      }\n    }\n  }\n\n  // Set up the fetch function\n  const tryFetchQueryPages = async pageVariables => {\n    try {\n      // Perform the query\n      const promises = pageVariables.map(variables => query.queryFn(variables))\n\n      query.cancelQueries = () =>\n        promises.map(({ cancel }) => cancel && cancel())\n\n      const data = await Promise.all(promises)\n\n      if (query.cancelled) throw query.cancelled\n\n      return data\n    } catch (error) {\n      if (query.cancelled) throw query.cancelled\n\n      // If we fail, increase the failureCount\n      query.setState(old => {\n        return {\n          ...old,\n          failureCount: old.failureCount + 1,\n        }\n      })\n\n      // Do we need to retry the request?\n      if (\n        // Only retry if the document is visible\n        query.config.retry === true ||\n        query.state.failureCount < query.config.retry\n      ) {\n        if (!isDocumentVisible()) {\n          return new Promise(r => {})\n        }\n\n        // Determine the retryDelay\n        const delay = functionalUpdate(\n          query.config.retryDelay,\n          query.state.failureCount\n        )\n\n        // Return a new promise with the retry\n        return new Promise((resolve, reject) => {\n          // Keep track of the retry timeout\n          setTimeout(async () => {\n            if (query.cancelled) return reject(query.cancelled)\n\n            try {\n              const data = await tryFetchQueryPages(pageVariables)\n              if (query.cancelled) return reject(query.cancelled)\n              resolve(data)\n            } catch (error) {\n              if (query.cancelled) return reject(query.cancelled)\n              reject(error)\n            }\n          }, delay)\n        })\n      }\n\n      throw error\n    }\n  }\n\n  query.fetch = async ({\n    variables = query.config.paginated && query.state.isCached\n      ? query.pageVariables\n      : query.variables,\n    force,\n    isFetchMore,\n  } = {}) => {\n    // Don't refetch fresh queries without force\n    if (!query.queryHash || (!query.state.isStale && !force)) {\n      return\n    }\n\n    // Create a new promise for the query cache if necessary\n    if (!query.promise) {\n      query.promise = (async () => {\n        // If there are any retries pending for this query, kill them\n        query.cancelled = null\n\n        const cleanup = () => {\n          delete query.promise\n\n          // Schedule a fresh invalidation, always!\n          clearTimeout(query.staleTimeout)\n\n          query.staleTimeout = setTimeout(() => {\n            if (query) {\n              query.setState(old => {\n                return {\n                  ...old,\n                  isStale: true,\n                }\n              })\n            }\n          }, query.config.staleTime)\n\n          query.setState(old => {\n            return {\n              ...old,\n              isFetching: false,\n              isFetchingMore: false,\n            }\n          })\n        }\n\n        try {\n          // Set up the query refreshing state\n          query.setState(old => {\n            return {\n              ...old,\n              isFetching: true,\n              isFetchingMore: isFetchMore,\n              failureCount: 0,\n            }\n          })\n\n          variables =\n            query.config.paginated && query.state.isCached && !isFetchMore\n              ? variables\n              : [variables]\n\n          // Try to fetch\n          let data = await tryFetchQueryPages(variables)\n\n          // If we are paginating, and this is the first query or a fetch more\n          // query, then store the variables in the pageVariables\n          if (\n            query.config.paginated &&\n            (isFetchMore || !query.state.isCached)\n          ) {\n            query.pageVariables.push(variables[0])\n          }\n\n          // Set data and mark it as cached\n          query.setState(old => {\n            data = query.config.paginated\n              ? isFetchMore\n                ? [...old.data, data[0]]\n                : data\n              : data[0]\n\n            return {\n              ...old,\n              error: null,\n              data,\n              isCached: true,\n              isStale: false,\n              ...(query.config.paginated && {\n                canFetchMore: query.config.getCanFetchMore(\n                  data[data.length - 1],\n                  data\n                ),\n              }),\n            }\n          })\n\n          query.instances.forEach(\n            instance =>\n              instance.onSuccess && instance.onSuccess(query.state.data)\n          )\n\n          cleanup()\n\n          return data\n        } catch (error) {\n          // As long as it's not a cancelled retry\n          cleanup()\n\n          if (error !== query.cancelled) {\n            // Store the error\n            query.setState(old => {\n              return {\n                ...old,\n                error,\n                isCached: false,\n                isStale: true,\n              }\n            })\n\n            query.instances.forEach(\n              instance => instance.onError && instance.onError(error)\n            )\n\n            throw error\n          }\n        }\n      })()\n    }\n\n    return query.promise\n  }\n\n  query.setData = updater =>\n    query.setState(old => ({\n      ...old,\n      data: functionalUpdate(updater, old.data),\n    }))\n\n  return query\n}\n\nexport function useQuery(queryKey, queryFn, config = {}) {\n  const isMountedRef = React.useRef(false)\n  const wasSuspendedRef = React.useRef(false)\n  const instanceIdRef = React.useRef(uid++)\n  const instanceId = instanceIdRef.current\n\n  config = {\n    ...useConfigContext(),\n    ...config,\n  }\n\n  const { manual } = config\n\n  const [\n    queryHash,\n    queryGroup,\n    variablesHash,\n    variables,\n  ] = config.queryKeySerializerFn(queryKey)\n\n  let query = queries.find(query => query.queryHash === queryHash)\n\n  let wasPrefetched\n\n  if (query) {\n    wasPrefetched = query.config.prefetch\n    query.config = config\n    if (!isMountedRef.current) {\n      query.config.prefetch = wasPrefetched\n    }\n    query.queryFn = queryFn\n  } else {\n    query = makeQuery({\n      queryHash,\n      queryGroup,\n      variablesHash,\n      variables,\n      config,\n      queryFn,\n    })\n    if (!isServer) {\n      queries.push(query)\n    }\n  }\n\n  React.useEffect(() => {\n    if (config.refetchInterval && !query.refetchInterval) {\n      query.refetchInterval = setInterval(() => {\n        if (isDocumentVisible() || config.refetchIntervalInBackground) {\n          query.fetch()\n        }\n      }, config.refetchInterval)\n\n      return () => {\n        clearInterval(query.refetchInterval)\n        query.refetchInterval = null\n      }\n    }\n  }, [config.refetchInterval, config.refetchIntervalInBackground, query])\n\n  const [state, setState] = React.useState(query.state)\n\n  const onStateUpdate = React.useCallback(newState => setState(newState), [])\n  const getLatestOnError = useGetLatest(config.onError)\n  const getLatestOnSuccess = useGetLatest(config.onSuccess)\n\n  React.useEffect(() => {\n    const unsubscribeFromQuery = query.subscribe({\n      id: instanceId,\n      onStateUpdate,\n      onSuccess: data => getLatestOnSuccess() && getLatestOnSuccess()(data),\n      onError: err => getLatestOnError() && getLatestOnError()(err),\n    })\n    return unsubscribeFromQuery\n  }, [getLatestOnError, getLatestOnSuccess, instanceId, onStateUpdate, query])\n\n  const isLoading = !state.isCached && query.state.isFetching\n  const refetch = query.fetch\n  const setData = query.setData\n\n  const fetchMore = React.useCallback(\n    config.paginated\n      ? paginationVariables =>\n          query.fetch({\n            variables: paginationVariables,\n            force: true,\n            isFetchMore: true,\n          })\n      : undefined,\n    [query]\n  )\n\n  const getLatestManual = useGetLatest(manual)\n\n  React.useEffect(() => {\n    if (getLatestManual()) {\n      return\n    }\n\n    if (config.suspense) {\n      if (wasSuspendedRef.current || wasPrefetched) {\n        return\n      }\n    }\n\n    const runRefetch = async () => {\n      try {\n        await query.fetch()\n      } catch (err) {\n        console.error(err)\n        // Swallow this error. Don't rethrow it into a render function\n      }\n    }\n\n    runRefetch()\n  }, [config.suspense, getLatestManual, query, wasPrefetched])\n\n  React.useEffect(() => {\n    isMountedRef.current = true\n  }, [])\n\n  if (config.suspense) {\n    if (state.error) {\n      throw state.error\n    }\n    if (!state.isCached) {\n      wasSuspendedRef.current = true\n      throw query.fetch()\n    }\n  }\n\n  wasSuspendedRef.current = false\n\n  return {\n    ...state,\n    isLoading,\n    refetch,\n    fetchMore,\n    setData,\n  }\n}\n\nexport async function prefetchQuery(queryKey, queryFn, config = {}) {\n  config = {\n    ...defaultConfig,\n    ...config,\n    prefetch: true,\n  }\n\n  const [\n    queryHash,\n    queryGroup,\n    variablesHash,\n    variables,\n  ] = defaultConfig.queryKeySerializerFn(queryKey)\n\n  // If we're prefetching, use the queryFn to make the fetch call\n\n  let query = queries.find(query => query.queryHash === queryHash)\n\n  if (query) {\n    if (!config.force) {\n      return\n    }\n    query.config = config\n    query.queryFn = queryFn\n  } else {\n    query = makeQuery({\n      queryHash,\n      queryGroup,\n      variablesHash,\n      variables,\n      config,\n      queryFn,\n    })\n    if (!isServer) {\n      queries.push(query)\n    }\n  }\n\n  // Trigger a query subscription with one-time unique id\n  const unsubscribeFromQuery = query.subscribe({\n    id: uid++,\n    onStateUpdate: () => {},\n  })\n\n  // Trigger a fetch and return the promise\n  try {\n    return await query.fetch({ force: config.force })\n  } finally {\n    // Since this is not a hook, upsubscribe after we're done\n    unsubscribeFromQuery()\n  }\n}\n\nexport async function refetchQuery(queryKey, config = {}) {\n  const [\n    ,\n    queryGroup,\n    variablesHash,\n    variables,\n  ] = defaultConfig.queryKeySerializerFn(queryKey)\n\n  // If we're simply refetching an existing query, then go find them\n  // and call their fetch functions\n\n  if (!queryGroup) {\n    return\n  }\n\n  return Promise.all(\n    queries.map(async query => {\n      if (query.queryGroup !== queryGroup) {\n        return\n      }\n\n      if (variables === false && query.variablesHash) {\n        return\n      }\n\n      if (variablesHash && query.variablesHash !== variablesHash) {\n        return\n      }\n\n      await query.fetch({ force: config.force })\n    })\n  )\n}\n\nexport function useMutation(\n  mutationFn,\n  { refetchQueries, refetchQueriesOnFailure } = {}\n) {\n  const [data, setData] = React.useState(null)\n  const [error, setError] = React.useState(null)\n  const [isLoading, setIsLoading] = React.useState(false)\n  const mutationFnRef = React.useRef()\n  mutationFnRef.current = mutationFn\n\n  const mutate = React.useCallback(\n    async (variables, { updateQuery, waitForRefetchQueries = false } = {}) => {\n      setIsLoading(true)\n      setError(null)\n\n      const doRefetchQueries = async () => {\n        const refetchPromises = refetchQueries.map(queryKey =>\n          refetchQuery(queryKey, { force: true })\n        )\n        if (waitForRefetchQueries) {\n          await Promise.all(refetchPromises)\n        }\n      }\n\n      try {\n        const res = await mutationFnRef.current(variables)\n        setData(res)\n\n        if (updateQuery) {\n          setQueryData(updateQuery, res, { shouldRefetch: false })\n        }\n\n        if (refetchQueries) {\n          try {\n            await doRefetchQueries()\n          } catch (err) {\n            console.error(err)\n            // Swallow this error since it is a side-effect\n          }\n        }\n\n        setIsLoading(false)\n\n        return res\n      } catch (error) {\n        setError(error)\n\n        if (refetchQueriesOnFailure) {\n          await doRefetchQueries()\n        }\n\n        setIsLoading(false)\n        throw error\n      }\n    },\n    [refetchQueriesOnFailure, refetchQueries]\n  )\n\n  return [mutate, { data, isLoading, error }]\n}\n\nexport function useIsFetching() {\n  const [state, setState] = React.useState({})\n  const ref = React.useRef()\n\n  if (!ref.current) {\n    ref.current = () => {\n      setState({})\n    }\n    globalStateListeners.push(ref.current)\n  }\n\n  React.useEffect(() => {\n    return () => {\n      globalStateListeners = globalStateListeners.filter(d => d !== ref.current)\n    }\n  }, [])\n\n  return React.useMemo(\n    () => state && queries.some(query => query.state.isFetching),\n    [state]\n  )\n}\n\nexport function setQueryData(\n  userQueryKey,\n  updater,\n  { shouldRefetch = true } = {}\n) {\n  const [queryHash] = defaultConfig.queryKeySerializerFn(userQueryKey)\n\n  if (!queryHash) {\n    return\n  }\n\n  const query = queries.find(d => d.queryHash === queryHash)\n\n  if (!query) {\n    return\n  }\n\n  query.setData(updater)\n\n  if (shouldRefetch) {\n    return refetchQuery(userQueryKey)\n  }\n}\n\nexport async function refetchAllQueries({\n  includeInactive,\n  force = includeInactive,\n  shouldRefetchQuery,\n} = {}) {\n  return Promise.all(\n    queries.map(async query => {\n      if (\n        typeof shouldRefetchQuery !== 'undefined' &&\n        !shouldRefetchQuery(query)\n      ) {\n        return\n      }\n      if (query.instances.length || includeInactive) {\n        return query.fetch({ force })\n      }\n    })\n  )\n}\n\nexport function clearQueryCache() {\n  queries.length = 0\n}\n\nfunction defaultQueryKeySerializerFn(queryKey) {\n  if (!queryKey) {\n    return []\n  }\n\n  if (typeof queryKey === 'function') {\n    try {\n      return defaultQueryKeySerializerFn(queryKey())\n    } catch {\n      return []\n    }\n  }\n\n  if (Array.isArray(queryKey)) {\n    let [id, variables] = queryKey\n    const variablesIsObject = isObject(variables)\n\n    if (typeof id !== 'string' || (variables && !variablesIsObject)) {\n      console.warn('Tuple queryKey:', queryKey)\n      throw new Error(\n        `Invalid query key tuple type: [${typeof id}, and ${typeof variables}]`\n      )\n    }\n\n    const variablesHash = variablesIsObject ? stableStringify(variables) : ''\n\n    return [\n      `${id}${variablesHash ? `_${variablesHash}}` : ''}`,\n      id,\n      variablesHash,\n      variables,\n    ]\n  }\n\n  return [queryKey, queryKey]\n}\n\nfunction stableStringifyReplacer(_, value) {\n  return isObject(value)\n    ? Object.assign(\n        {},\n        ...Object.keys(value)\n          .sort()\n          .map(key => ({\n            [key]: value[key],\n          }))\n      )\n    : Array.isArray(value)\n    ? value\n    : String(value)\n}\n\nexport function stableStringify(obj) {\n  return JSON.stringify(obj, stableStringifyReplacer)\n}\n\nfunction isObject(a) {\n  return a && typeof a === 'object' && !Array.isArray(a)\n}\n\nfunction isDocumentVisible() {\n  return (\n    typeof document === 'undefined' ||\n    document.visibilityState === undefined ||\n    document.visibilityState === 'visible' ||\n    document.visibilityState === 'prerender'\n  )\n}\n\nfunction isOnline() {\n  return navigator.onLine === undefined || navigator.onLine\n}\n\nfunction useGetLatest(obj) {\n  const ref = React.useRef()\n  ref.current = obj\n\n  return React.useCallback(() => ref.current, [])\n}\n\nfunction functionalUpdate(updater, old) {\n  return typeof updater === 'function' ? updater(old) : updater\n}\n"],"names":["queries","cancelledError","globalStateListeners","uid","configContext","React","createContext","isServer","window","defaultConfig","retry","retryDelay","attemptIndex","Math","min","staleTime","cacheTime","refetchAllOnWindowFocus","refetchInterval","suspense","queryKeySerializerFn","defaultQueryKeySerializerFn","onWindowFocus","isDocumentVisible","isOnline","refetchAllQueries","shouldRefetchQuery","query","config","refetchOnWindowFocus","error","console","message","removePreviousHandler","setFocusHandler","callback","handleFocus","addEventListener","removeEventListener","ReactQueryConfigProvider","children","configContextValue","useContext","newConfig","useMemo","useConfigContext","makeQuery","options","initialData","paginated","pageVariables","instances","state","isFetching","isFetchingMore","canFetchMore","failureCount","isCached","isStale","data","setState","updater","functionalUpdate","forEach","instance","onStateUpdate","d","subscribe","found","find","id","Object","assign","push","old","isInactive","clearTimeout","cacheTimeout","cancelled","filter","length","cancelQueries","setTimeout","splice","findIndex","tryFetchQueryPages","promises","map","variables","queryFn","cancel","Promise","all","r","delay","resolve","reject","fetch","force","isFetchMore","queryHash","promise","cleanup","staleTimeout","getCanFetchMore","onSuccess","onError","setData","useQuery","queryKey","isMountedRef","useRef","wasSuspendedRef","instanceIdRef","instanceId","current","manual","queryGroup","variablesHash","wasPrefetched","prefetch","useEffect","setInterval","refetchIntervalInBackground","clearInterval","useState","useCallback","newState","getLatestOnError","useGetLatest","getLatestOnSuccess","unsubscribeFromQuery","err","isLoading","refetch","fetchMore","paginationVariables","undefined","getLatestManual","runRefetch","prefetchQuery","refetchQuery","useMutation","mutationFn","refetchQueries","refetchQueriesOnFailure","setError","setIsLoading","mutationFnRef","mutate","updateQuery","waitForRefetchQueries","doRefetchQueries","refetchPromises","res","setQueryData","shouldRefetch","useIsFetching","ref","some","userQueryKey","includeInactive","clearQueryCache","Array","isArray","variablesIsObject","isObject","warn","Error","stableStringify","stableStringifyReplacer","_","value","keys","sort","key","String","obj","JSON","stringify","a","document","visibilityState","navigator","onLine"],"mappings":"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"}